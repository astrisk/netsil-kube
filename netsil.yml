apiVersion: v1
kind: Namespace
metadata:
  name: netsil
--------
apiVersion: v1
kind: ReplicationController
metadata:
  namespace: netsil
  name: netsil
spec:
  replicas: 1
  selector:
    app: netsil
    component: netsil
  template:
    metadata:
      name: stream-processor
      labels:
        app: netsil
        component: netsil
        version: stable
    spec:
      containers:
      - name: netsil
        image: netsil/netsil:stable-1.0.6
        command:
        - /root/startup.sh
        securityContext:
          privileged: true
        env:
        - name: PRODUCT_FLAVOR
          value: Lite
        - name: DEPLOY_ENV
          value: docker-compose
        - name: NODEJS_ENV
          value: NODE_ENV=production
        - name: BUILD_ENV
          value: production
        - name: VALID_INDEX_NAMES
          value: event,notification
        - name: NETSIL_BUILD_BRANCH
          value: stable
        - name: NETSIL_VERSION_NUMBER
          value: 1.0.4
        ports:
        - containerPort: 80
        - containerPort: 443
        - containerPort: 2001
        - containerPort: 2003
        - containerPort: 2003
          protocol: UDP
        - containerPort: 5005
        volumeMounts:
        - name: root
          mountPath: /outer_host
        - name: log
          mountPath: /var/log/netsil
        - name: var-tmp
          mountPath: /var/tmp
        - name: redis
          mountPath: /var/lib/redis
        - name: elasticsearch
          mountPath: /usr/share/elasticsearch/data
        - name: alerts
          mountPath: /opt/netsil/alerts/data
        - name: user-persistence
          mountPath: /opt/netsil/user-persistence/data
        - name: kafka-logs
          mountPath: /opt/netsil/kafka/kafka-log-dir
        - name: druid-realtime-segments
          mountPath: /opt/netsil/druid/realtime-segments
        - name: druid-localstorage
          mountPath: /tmp/druid/localStorage
      volumes:
      - name: root
        hostPath:
          path: /
      - name: log
        hostPath:
          path: /var/log/netsil
      - name: var-tmp
        hostPath:
          path: /var/tmp
      - name: redis
        hostPath:
          path: /opt/netsil/lite/redis
      - name: elasticsearch
        hostPath:
          path: /opt/netsil/lite/elasticsearch/data
      - name: alerts
        hostPath:
          path: /opt/netsil/lite/alerts/data
      - name: user-persistence
        hostPath:
          path: /opt/netsil/lite/user-persistence/data
      - name: kafka-logs
        hostPath:
          path: /opt/netsil/lite/kafka/kafka-log-dir
      - name: druid-realtime-segments
        hostPath:
          path: /opt/netsil/lite/druid/realtime-segments
      - name: druid-localstorage
        hostPath:
          path: /opt/netsil/lite/druid/localStorage
--------
apiVersion: v1
kind: Service
metadata:
  namespace: netsil
  name: netsil
spec:
  selector:
    app: netsil
    component: netsil
  ports:
    - name: http
      port: 80
    - name: https
      port: 443
      nodePort: 30443
    - name: port2001
      port: 2001
    - name: port2003
      port: 2003
    - name: port2003udp
      port: 2003
      protocol: UDP
    - name: port5005
      port: 5005
  type: NodePort
--------
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  namespace: netsil
  name: collector
  labels:
    app: netsil
    component: collector
spec:
  template:
    metadata:
      labels:
        app: netsil
        component: collector
    spec:
      hostNetwork: true
      containers:
      - name: collector
        image: netsil/collectors:stable-1.0.6
        command: ["/bin/bash","-c","NETSIL_SP_HOST=$NETSIL_SERVICE_HOST /opt/netsil/collectors/start.sh"]
        securityContext:
          capabilities:
            add:
            - NET_RAW
            - NET_ADMIN
        env:
        - name: NETSIL_TRAFFIC_PORT
          value: '2003'
        - name: NETSIL_INFRA_PORT
          value: '2001'
        - name: DEPLOY_ENV
          value: 'docker'
        volumeMounts:
        - name: cgroup
          mountPath: /host/sys/fs/cgroup/
          readOnly: true
        - name: proc
          mountPath: /host/proc/
          readOnly: true
        - name: docker-sock
          mountPath: /var/run/docker.sock
          readOnly: true
      volumes:
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup/
      - name: proc
        hostPath:
          path: /proc/
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
